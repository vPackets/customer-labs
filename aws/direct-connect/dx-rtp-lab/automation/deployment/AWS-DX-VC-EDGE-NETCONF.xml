<config
	xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"
	xmlns:xc="urn:ietf:params:xml:ns:netconf:base:1.0">
	<vrfs
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-infra-rsi-cfg">
		<vrf>
			<vrf-name>CUSTOMER_A</vrf-name>
			<create></create>
			<bgp-global
				xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-ipv4-bgp-cfg">
				<route-distinguisher>
					<type>as</type>
					<as-xx>0</as-xx>
					<as>65000</as>
					<as-index>100</as-index>
				</route-distinguisher>
			</bgp-global>
			<afs>
				<af>
					<af-name>ipv4</af-name>
					<saf-name>unicast</saf-name>
					<topology-name>default</topology-name>
					<create></create>
					<bgp
						xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-ipv4-bgp-cfg">
						<import-route-targets>
							<route-targets>
								<route-target>
									<type>as</type>
									<as-or-four-byte-as>
										<as-xx>0</as-xx>
										<as>65000</as>
										<as-index>100</as-index>
										<stitching-rt>0</stitching-rt>
									</as-or-four-byte-as>
								</route-target>
							</route-targets>
						</import-route-targets>
						<export-route-targets>
							<route-targets>
								<route-target>
									<type>as</type>
									<as-or-four-byte-as>
										<as-xx>0</as-xx>
										<as>65000</as>
										<as-index>100</as-index>
										<stitching-rt>0</stitching-rt>
									</as-or-four-byte-as>
								</route-target>
							</route-targets>
						</export-route-targets>
					</bgp>
				</af>
			</afs>
		</vrf>
	</vrfs>
	<routing-policy
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-policy-repository-cfg">
		<sets>
			<prefix-sets>
				<prefix-set>
					<set-name>BGP-NEXT-HOP-PREFIX</set-name>
					<rpl-prefix-set>prefix-set BGP-NEXT-HOP-PREFIX
  10.10.10.10/32 le 32
end-set
</rpl-prefix-set>
				</prefix-set>
			</prefix-sets>
		</sets>
		<route-policies>
			<route-policy>
				<route-policy-name>AWS_DX_CUSTOMER</route-policy-name>
				<rpl-route-policy>route-policy AWS_DX_CUSTOMER
  pass
end-policy
</rpl-route-policy>
			</route-policy>
			<route-policy>
				<route-policy-name>MPLSoUDP-TUNNEL-POLICY</route-policy-name>
				<rpl-route-policy>route-policy MPLSoUDP-TUNNEL-POLICY
  if next-hop in BGP-NEXT-HOP-PREFIX then
    set encapsulation-type mpls-udp
  else
    pass
  endif
end-policy
</rpl-route-policy>
			</route-policy>
		</route-policies>
	</routing-policy>
	<bgp
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-ipv4-bgp-cfg">
		<instance>
			<instance-name>default</instance-name>
			<instance-as>
				<as>0</as>
				<four-byte-as>
					<as>65200</as>
					<bgp-running></bgp-running>
					<default-vrf>
						<global>
							<router-id>10.11.11.11</router-id>
							<neighbor-logging-detail></neighbor-logging-detail>
							<global-afs>
								<global-af>
									<af-name>ipv4-unicast</af-name>
									<enable></enable>
									<sourced-networks>
										<sourced-network>
											<network-addr>10.11.11.11</network-addr>
											<network-prefix>32</network-prefix>
										</sourced-network>
									</sourced-networks>
								</global-af>
								<global-af>
									<af-name>vpnv4-unicast</af-name>
									<enable></enable>
									<next-hop-route-policy>MPLSoUDP-TUNNEL-POLICY</next-hop-route-policy>
								</global-af>
							</global-afs>
						</global>
						<bgp-entity>
							<neighbors>
								<neighbor>
									<neighbor-address>10.0.0.21</neighbor-address>
									<create></create>
									<remote-as>
										<as-xx>0</as-xx>
										<as-yy>64515</as-yy>
									</remote-as>
									<neighbor-afs>
										<neighbor-af>
											<af-name>ipv4-unicast</af-name>
											<activate></activate>
											<route-policy-in>AWS_DX_CUSTOMER</route-policy-in>
											<route-policy-out>AWS_DX_CUSTOMER</route-policy-out>
											<soft-reconfiguration>
												<inbound-soft>true</inbound-soft>
												<soft-always>true</soft-always>
												<rpki-options>rpki-default-option</rpki-options>
											</soft-reconfiguration>
										</neighbor-af>
									</neighbor-afs>
								</neighbor>
								<neighbor>
									<neighbor-address>10.10.10.10</neighbor-address>
									<create></create>
									<remote-as>
										<as-xx>0</as-xx>
										<as-yy>65000</as-yy>
									</remote-as>
									<ebgp-multihop>
										<max-hop-count>255</max-hop-count>
										<mpls-deactivation>false</mpls-deactivation>
									</ebgp-multihop>
									<update-source-interface>Loopback0</update-source-interface>
									<neighbor-afs>
										<neighbor-af>
											<af-name>vpnv4-unicast</af-name>
											<activate></activate>
											<route-policy-in>AWS_DX_CUSTOMER</route-policy-in>
											<route-policy-out>AWS_DX_CUSTOMER</route-policy-out>
										</neighbor-af>
									</neighbor-afs>
								</neighbor>
								<neighbor>
									<neighbor-address>192.168.100.6</neighbor-address>
									<create></create>
								</neighbor>
							</neighbors>
						</bgp-entity>
					</default-vrf>
					<vrfs>
						<vrf>
							<vrf-name>CUSTOMER_A</vrf-name>
							<vrf-global>
								<exists></exists>
								<route-distinguisher>
									<type>as</type>
									<as-xx>0</as-xx>
									<as>65000</as>
									<as-index>100</as-index>
								</route-distinguisher>
								<vrf-global-afs>
									<vrf-global-af>
										<af-name>ipv4-unicast</af-name>
										<enable></enable>
									</vrf-global-af>
								</vrf-global-afs>
							</vrf-global>
							<vrf-neighbors>
								<vrf-neighbor>
									<neighbor-address>192.168.100.6</neighbor-address>
									<create></create>
									<remote-as>
										<as-xx>0</as-xx>
										<as-yy>65300</as-yy>
									</remote-as>
									<vrf-neighbor-afs>
										<vrf-neighbor-af>
											<af-name>ipv4-unicast</af-name>
											<activate></activate>
											<send-community-ebgp>true</send-community-ebgp>
											<route-policy-in>AWS_DX_CUSTOMER</route-policy-in>
											<route-policy-out>AWS_DX_CUSTOMER</route-policy-out>
											<soft-reconfiguration>
												<inbound-soft>true</inbound-soft>
												<soft-always>true</soft-always>
												<rpki-options>rpki-default-option</rpki-options>
											</soft-reconfiguration>
										</vrf-neighbor-af>
									</vrf-neighbor-afs>
								</vrf-neighbor>
							</vrf-neighbors>
						</vrf>
					</vrfs>
				</four-byte-as>
			</instance-as>
		</instance>
	</bgp>
	<host-names
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-shellutil-cfg">
		<host-name>AWS-DX-VC-EDGE</host-name>
	</host-names>
	<object-group
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-infra-objmgr-cfg">
		<network>
			<ipv4>
				<udf-objects>
					<udf-object>
						<object-name>MPLSoUDP-DECAP</object-name>
						<addresses>
							<address>
								<prefix>10.10.10.10</prefix>
								<prefix-length>32</prefix-length>
							</address>
						</addresses>
					</udf-object>
				</udf-objects>
			</ipv4>
		</network>
	</object-group>
	<interface-configurations
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-ifmgr-cfg">
		<interface-configuration>
			<active>act</active>
			<interface-name>nve1</interface-name>
			<interface-virtual></interface-virtual>
			<nve
				xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-tunnel-nve-cfg">
				<overlay-encapsulation>mplsudp-encapsulation</overlay-encapsulation>
				<source-interface>Loopback0</source-interface>
			</nve>
			<link-status></link-status>
		</interface-configuration>
		<interface-configuration>
			<active>act</active>
			<interface-name>Loopback0</interface-name>
			<interface-virtual></interface-virtual>
			<ipv4-network
				xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-ipv4-io-cfg">
				<addresses>
					<primary>
						<address>10.11.11.11</address>
						<netmask>255.255.255.255</netmask>
					</primary>
				</addresses>
			</ipv4-network>
		</interface-configuration>
		<interface-configuration>
            <shutdown xc:operation="remove"/>
			<active>act</active>
			<interface-name>FourHundredGigE0/0/0/0</interface-name>
			<description>*** To VPC Router ***</description>
			<vrf
				xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-infra-rsi-cfg">CUSTOMER_A
			
			</vrf>
			<ipv4-network
				xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-ipv4-io-cfg">
				<addresses>
					<primary>
						<address>192.168.100.5</address>
						<netmask>255.255.255.252</netmask>
					</primary>
				</addresses>
			</ipv4-network>
		</interface-configuration>
		<interface-configuration>
            <shutdown xc:operation="remove"/>
			<active>act</active>
			<interface-name>FourHundredGigE0/0/0/1</interface-name>
			<shutdown></shutdown>
		</interface-configuration>
		<interface-configuration>
        <shutdown xc:operation="remove"/>
			<active>act</active>
			<interface-name>FourHundredGigE0/0/0/2</interface-name>
			<description>*** To R4 ***</description>
			<ipv4-network
				xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-ipv4-io-cfg">
				<addresses>
					<primary>
						<address>10.0.0.22</address>
						<netmask>255.255.255.252</netmask>
					</primary>
				</addresses>
			</ipv4-network>
		</interface-configuration>
	</interface-configurations>
	<router
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-um-router-bgp-cfg">
		<bgp>
			<as>
				<as-number>65200</as-number>
				<bgp>
					<router-id>10.11.11.11</router-id>
					<log>
						<neighbor>
							<changes>
								<detail />
							</changes>
						</neighbor>
					</log>
				</bgp>
				<address-families>
					<address-family>
						<af-name>ipv4-unicast</af-name>
						<networks>
							<network>
								<address>10.11.11.11</address>
								<masklength>32</masklength>
							</network>
						</networks>
					</address-family>
					<address-family>
						<af-name>vpnv4-unicast</af-name>
						<nexthop>
							<route-policy>MPLSoUDP-TUNNEL-POLICY</route-policy>
						</nexthop>
					</address-family>
				</address-families>
				<neighbors>
					<neighbor>
						<neighbor-address>10.0.0.21</neighbor-address>
						<remote-as>64515</remote-as>
						<address-families>
							<address-family>
								<af-name>ipv4-unicast</af-name>
								<route-policy>
									<in>AWS_DX_CUSTOMER</in>
									<out>AWS_DX_CUSTOMER</out>
								</route-policy>
								<soft-reconfiguration>
									<inbound>
										<always />
									</inbound>
								</soft-reconfiguration>
							</address-family>
						</address-families>
					</neighbor>
					<neighbor>
						<neighbor-address>10.10.10.10</neighbor-address>
						<remote-as>65000</remote-as>
						<ebgp-multihop>
							<maximum-hop-count>255</maximum-hop-count>
						</ebgp-multihop>
						<update-source>Loopback0</update-source>
						<address-families>
							<address-family>
								<af-name>vpnv4-unicast</af-name>
								<route-policy>
									<in>AWS_DX_CUSTOMER</in>
									<out>AWS_DX_CUSTOMER</out>
								</route-policy>
							</address-family>
						</address-families>
					</neighbor>
					<neighbor>
						<neighbor-address>192.168.100.6</neighbor-address>
					</neighbor>
				</neighbors>
				<vrfs>
					<vrf>
						<vrf-name>CUSTOMER_A</vrf-name>
						<rd>
							<two-byte-as>
								<as-number>65000</as-number>
								<index>100</index>
							</two-byte-as>
						</rd>
						<address-families>
							<address-family>
								<af-name>ipv4-unicast</af-name>
							</address-family>
						</address-families>
						<neighbors>
							<neighbor>
								<neighbor-address>192.168.100.6</neighbor-address>
								<remote-as>65300</remote-as>
								<address-families>
									<address-family>
										<af-name>ipv4-unicast</af-name>
										<send-community-ebgp />
										<route-policy>
											<in>AWS_DX_CUSTOMER</in>
											<out>AWS_DX_CUSTOMER</out>
										</route-policy>
										<soft-reconfiguration>
											<inbound>
												<always />
											</inbound>
										</soft-reconfiguration>
									</address-family>
								</address-families>
							</neighbor>
						</neighbors>
					</vrf>
				</vrfs>
			</as>
		</bgp>
	</router>
	<hostname
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-um-hostname-cfg">
		<system-network-name>AWS-DX-VC-EDGE</system-network-name>
	</hostname>
	<routing-policy
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-um-route-policy-cfg">
		<sets>
			<prefix-sets>
				<prefix-set>
					<set-name>BGP-NEXT-HOP-PREFIX</set-name>
					<rpl-prefix-set>prefix-set BGP-NEXT-HOP-PREFIX
  10.10.10.10/32 le 32
end-set
</rpl-prefix-set>
				</prefix-set>
			</prefix-sets>
		</sets>
		<route-policies>
			<route-policy>
				<route-policy-name>AWS_DX_CUSTOMER</route-policy-name>
				<rpl-route-policy>route-policy AWS_DX_CUSTOMER
  pass
end-policy
</rpl-route-policy>
			</route-policy>
			<route-policy>
				<route-policy-name>MPLSoUDP-TUNNEL-POLICY</route-policy-name>
				<rpl-route-policy>route-policy MPLSoUDP-TUNNEL-POLICY
  if next-hop in BGP-NEXT-HOP-PREFIX then
    set encapsulation-type mpls-udp
  else
    pass
  endif
end-policy
</rpl-route-policy>
			</route-policy>
		</route-policies>
	</routing-policy>
	<vrfs
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-um-vrf-cfg">
		<vrf>
			<vrf-name>CUSTOMER_A</vrf-name>
			<rd
				xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-um-router-bgp-cfg">
				<two-byte-as>
					<as-number>65000</as-number>
					<index>100</index>
				</two-byte-as>
			</rd>
			<address-family>
				<ipv4>
					<unicast>
						<import
							xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-um-router-bgp-cfg">
							<route-target>
								<two-byte-as-rts>
									<two-byte-as-rt>
										<as-number>65000</as-number>
										<index>100</index>
										<stitching>false</stitching>
									</two-byte-as-rt>
								</two-byte-as-rts>
							</route-target>
						</import>
						<export
							xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-um-router-bgp-cfg">
							<route-target>
								<two-byte-as-rts>
									<two-byte-as-rt>
										<as-number>65000</as-number>
										<index>100</index>
										<stitching>false</stitching>
									</two-byte-as-rt>
								</two-byte-as-rts>
							</route-target>
						</export>
					</unicast>
				</ipv4>
			</address-family>
		</vrf>
	</vrfs>
	<object-group
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-um-object-group-cfg">
		<network>
			<ipv4s>
				<ipv4>
					<ipv4-object-group-name>MPLSoUDP-DECAP</ipv4-object-group-name>
					<ip-addresses>
						<ip-address>
							<address>10.10.10.10</address>
							<length>32</length>
						</ip-address>
					</ip-addresses>
				</ipv4>
			</ipv4s>
		</network>
	</object-group>
	<nve
		xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-um-if-nve-cfg">
		<decap-prefix>
			<source>
				<ipv4>MPLSoUDP-DECAP</ipv4>
				<object-group>MPLSoUDP-DECAP</object-group>
			</source>
		</decap-prefix>
	</nve>
</config>